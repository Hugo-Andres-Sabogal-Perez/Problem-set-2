# Realizamos inicialmente una limpieza del entorno
rm(list = ls())
# Set directory:
setwd(substr(getwd(), 1, nchar(getwd()) - 8))
# Llamamos las librerías necesarias para la realización del trabajo
require(pacman)
require(tidyverse)
require(rvest)
require(stargazer)
require(rio)
require(caret)
require(gridExtra)
require(skimr)
require(boot)
require(tidytable)
require(VIM)
require(leaps)
require(margins)
require(glmnet)
?hotdeck()
rm(list = ls())
# Set directory:
setwd(substr(getwd(), 1, nchar(getwd()) - 8))
require(pacman)
require(tidyverse)
require(rvest)
require(stargazer)
require(rio)
require(caret)
require(gridExtra)
require(skimr)
require(boot)
require(tidytable)
require(VIM)
require(leaps)
require(margins)
require(glmnet)
train_H<-import('Stores/EHstd.csv')
test_H<-import('Stores/THstd.csv')
train_H<-train_H %>% select(-id, -Lp)
train_H <- hotdeck(train_H)
test_H <- hotdeck(test_H)
#Convierto en facotores la categoricas para training
train_H<- train_H %>%
mutate(Pobre=factor(Pobre,levels=c(0,1),labels=c("No","Yes")))
train_H[, 13:ncol(train_H)] <- lapply(train_H[, 13:ncol(train_H)], factor)
# Luego, asignas las etiquetas "si" y "no" a los niveles de los factores
for (i in 13:ncol(train_H)) {
levels(train_H[[i]]) <- c("no", "si")
}
#Convierto en facotores la categoricas para test
test_H[, 13:ncol(test_H)] <- lapply(test_H[, 13:ncol(test_H)], factor)
View(test_H)
for (i in 13:ncol(test_H)) {
levels(test_H[[i]]) <- c("no", "si")
}
for (i in 13:ncol(test_H)) {
levels(test_H[[i]]) <- c("no", "si")
}
for (i in 12:ncol(test_H)) {
levels(test_H[[i]]) <- c("no", "si")
}
for (i in 10:ncol(test_H)) {
levels(test_H[[i]]) <- c("no", "si")
}
for (i in 9:ncol(test_H)) {
levels(test_H[[i]]) <- c("no", "si")
}
for (i in 8:ncol(test_H)) {
levels(test_H[[i]]) <- c("no", "si")
}
test_H[, 13:ncol(test_H)] <- lapply(test_H[, 13:ncol(test_H)], factor)
for (i in 8:ncol(test_H)) {
levels(test_H[[i]]) <- c("no", "si")
}
for (i in 13:ncol(train_H)) {
levels(train_H[[i]]) <- c("no", "si")
}
for (i in 13:ncol(test_H)) {
levels(test_H[[i]]) <- c("no", "si")
}
for (i in 13:ncol(test_H)) {
levels(test_H[[i]]) <- c("no", "si")
}
