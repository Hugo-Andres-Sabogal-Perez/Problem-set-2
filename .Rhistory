#### Script problem set 2 ######
# Realizamos inicialmente una limpieza del entorno
rm(list = ls())
# Set directory:
setwd(substr(getwd(), 1, nchar(getwd()) - 8))
# Llamamos las librerías necesarias para la realización del trabajo
require(pacman)
require(tidyverse)
require(rvest)
require(stargazer)
require(rio)
require(caret)
require(gridExtra)
require(skimr)
require(boot)
require(tidytable)
require(VIM)
require(leaps)
require(margins)
# Importar la base de datos:
EH = read.table(unz("Stores/train_hogares.csv.zip", "train_hogares.csv"), header=T, sep=",")
EP = read.table(unz("Stores/train_personas.csv.zip", "train_personas.csv"), header=T, sep=",")
TH = read.table(unz("Stores/test_hogares.csv.zip", "test_hogares.csv"), header=T, sep=",")
TP = read.table(unz("Stores/test_personas.csv.zip", "test_personas.csv"), header=T, sep=",")
# Seleccion de variables testeo y entrenamiento:
colnames(EH)
colnames(TH)
colnames(EP)
colnames(TP)
View(EP)
e recuencia para las variables==9
nueve = c('P7510s7', 'P7510s6', 'P7510s5', 'P7510s3', 'P7510s2', 'P7510s1', 'P7500s3', 'P7500s2', 'P7500s1', 'P6620',
'P6610', 'P6600', 'P6590', 'P6585s4', 'P6585s3', 'P6585s2', 'P6585s1', 'P6580', 'P6545', 'P6510', 'P6090')
data_nueve<-EP %>% select(all_of(nueve))
frecuencia_nueve <- lapply(data_nueve, table)
frecuencia_nueve
# Se perdio unicamente un .043% de las observaciones
for(var in nueve){
EP = EP %>% filter(.data[[var]] != 9 | is.na(.data[[var]]))
}
vars <- length(colnames(EP))
descEP <- data.frame("Variable" = colnames(EP), "Missings" = rep(NA, vars), "Media" = rep(NA, vars), "Desviacion Estandard" = rep(NA, vars))
View(descEP)
for (col in colnames(EP)) {
df <- EP[, colnames(EP) == col]
NAs <- sum(is.na(df))/nrow(EP)
mean <- mean(df, na.rm = T)
sd <- sqrt(var(df, na.rm = T))
descEP[descEP$Variable == col, 2] <- NAs
descEP[descEP$Variable == col, 3] <- mean
descEP[descEP$Variable == col, 4] <- sd
}
View(descEP)
#### Script problem set 2 ######
# Realizamos inicialmente una limpieza del entorno
rm(list = ls())
require(pacman)
require(tidyverse)
require(rvest)
require(stargazer)
require(rio)
require(caret)
require(gridExtra)
require(skimr)
require(boot)
require(tidytable)
require(VIM)
require(leaps)
require(margins)
# Importar la base de datos:
EH = read.table(unz("Stores/train_hogares.csv.zip", "train_hogares.csv"), header=T, sep=",")
EP = read.table(unz("Stores/train_personas.csv.zip", "train_personas.csv"), header=T, sep=",")
TH = read.table(unz("Stores/test_hogares.csv.zip", "test_hogares.csv"), header=T, sep=",")
TP = read.table(unz("Stores/test_personas.csv.zip", "test_personas.csv"), header=T, sep=",")
# Seleccion de variables testeo y entrenamiento:
colnames(EH)
colnames(TH)
colnames(EP)
colnames(TP)
# Data pre process:
# Variables dependientes:
Yhogar = colnames(EH)[!(colnames(EH) %in% colnames(TH))]
Ypersona = colnames(EP)[!(colnames(EP) %in% colnames(TP))]
# eliminamos las filas de categoricas con vars == 9
# Eliminar la categoria 9 para estas variables:
# Se realiza una tabla de frecuencia para las variables==9
nueve = c('P7510s7', 'P7510s6', 'P7510s5', 'P7510s3', 'P7510s2', 'P7510s1', 'P7500s3', 'P7500s2', 'P7500s1', 'P6620',
'P6610', 'P6600', 'P6590', 'P6585s4', 'P6585s3', 'P6585s2', 'P6585s1', 'P6580', 'P6545', 'P6510', 'P6090')
data_nueve<-EP %>% select(all_of(nueve))
frecuencia_nueve <- lapply(data_nueve, table)
frecuencia_nueve
# Se perdio unicamente un .043% de las observaciones
for(var in nueve){
EP = EP %>% filter(.data[[var]] != 9 | is.na(.data[[var]]))
}
# Porcentaje de missings por variable:
# Hay un cantidad de variables que no sirven de la base ep (demasiados missings/constantes)
vars <- length(colnames(EP))
descEP <- data.frame("Variable" = colnames(EP), "Missings" = rep(NA, vars), "Media" = rep(NA, vars), "Desviacion Estandard" = rep(NA, vars))
for (col in colnames(EP)) {
df <- EP[, colnames(EP) == col]
NAs <- sum(is.na(df))/nrow(EP)
mean <- mean(df, na.rm = T)
sd <- sqrt(var(df, na.rm = T))
descEP[descEP$Variable == col, 2] <- NAs
descEP[descEP$Variable == col, 3] <- mean
descEP[descEP$Variable == col, 4] <- sd
}
View(descEP)
descEP$mean<- colMeans(EP)
rm(list = ls())
rm(list = ls())
