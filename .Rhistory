EH = read.table()
rm(list = ls())
# Set directory:
setwd('/Users/juansilva/Documents/GitHub/Problem-set-2')
rm(list = ls())
# Set directory:
# Llamamos las librerías necesarias para la realización del trabajo
require(pacman)
require(tidyverse)
require(rvest)
require(stargazer)
require(rio)
require(caret)
require(gridExtra)
require(skimr)
require(boot)
require(tidytable)
require(VIM)
require(leaps)
require(margins)
# Importar la base de datos:
EH = read.table(unz("Stores/train_hogares.csv.zip", "train_hogares.csv"), header=T, sep=",")
rm(list = ls())
# Llamamos las librerías necesarias para la realización del trabajo
require(pacman)
require(tidyverse)
require(rvest)
require(stargazer)
require(rio)
require(caret)
require(gridExtra)
require(skimr)
require(boot)
require(tidytable)
require(VIM)
require(leaps)
require(margins)
install.packages(leans)
install.packages(leas)
install.packages(leaps)
H = read.table(unz("Stores/train_hogares.csv.zip", "train_hogares.csv"), header=T, sep=",")
rm(list = ls())
# Set directory:
setwd("/Users/mapaosuna/Desktop/Octavo Semestre/Big Data/Talleres/Taller 2/Problem-set-2")
# Llamamos las librerías necesarias para la realización del trabajo
require(pacman)
require(tidyverse)
require(rvest)
require(stargazer)
require(rio)
require(caret)
require(gridExtra)
require(skimr)
require(boot)
require(tidytable)
require(VIM)
require(leaps)
require(margins)
#Importamos bases de datos
EH = read.table(unz("Stores/train_hogares.csv.zip", "train_hogares.csv"), header=T, sep=",")
EP = read.table(unz("Stores/train_personas.csv.zip", "train_personas.csv"), header=T, sep=",")
TH = read.table(unz("Stores/test_hogares.csv.zip", "test_hogares.csv"), header=T, sep=",")
TP = read.table(unz("Stores/test_personas.csv.zip", "test_personas.csv"), header=T, sep=",")
#Identificación de las variables dependientes que se utilizan para el desarrollo del trabajo
VarDep_train = EH %>% select(id,Pobre,Ingpcug)
#Vamos a dejar las mismas variables tanto en la base de entrenamiento como en la base de prueba
EH = EH %>% select(colnames(TH))
#Ahora para las bases de datos de personas
EP = EP %>% select(colnames(TP))
#Inicialmente manipulamos las bases de datos de personas (tanto de entranmiento como de prueba)
#Eliminamos todas las observaciones que tengan la categoría =9
#Base de entrenamiento:
nueve = c('P7510s7', 'P7510s6', 'P7510s5', 'P7510s3', 'P7510s2', 'P7510s1', 'P7500s3', 'P7500s2', 'P6620',
'P6610', 'P6600', 'P6590', 'P6585s4', 'P6585s3', 'P6585s2', 'P6585s1', 'P6580', 'P6545', 'P6510', 'P6090')
data_nueve<-EP %>% select(all_of(nueve))
frecuencia_nueve <- lapply(data_nueve, table)
frecuencia_nueve #La tabla de frecuencia solo se realiza para identificar que efectivamente se hayan tomado las observaciones correctas.
# Se perdió unicamente un 0.043% de las observaciones
for(var in nueve){
EP = EP %>% filter(.data[[var]] != 9 | is.na(.data[[var]]))
}
#Base de prueba:
for(var in nueve){
TP = TP %>% filter(.data[[var]] != 9 | is.na(.data[[var]]))
}
